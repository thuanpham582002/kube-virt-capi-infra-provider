# CAPI Spec - DIRECT VM ADOPTION (NO TEMPLATE)
# Adopt lab-vm-04 trá»±c tiáº¿p KHÃ”NG qua KubevirtMachineTemplate
# Simplified approach vá»›i annotation trá»±c tiáº¿p

---
# Cluster resource
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: kubeadm-direct-adoption-test
  namespace: vm-lab
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 10.243.0.0/16
    services:
      cidrBlocks:
        - 10.95.0.0/16
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: KubevirtCluster
    name: kubeadm-direct-adoption-test
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: kubeadm-direct-adoption-test-control-plane

---
# KubevirtCluster
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtCluster
metadata:
  name: kubeadm-direct-adoption-test
  namespace: vm-lab
spec:
  controlPlaneServiceTemplate:
    spec:
      type: ClusterIP

---
# Machine - vá»›i direct adoption annotation
apiVersion: cluster.x-k8s.io/v1beta1
kind: Machine
metadata:
  name: kubeadm-direct-adoption-test-control-plane-001
  namespace: vm-lab
  labels:
    cluster.x-k8s.io/cluster-name: kubeadm-direct-adoption-test
    cluster.x-k8s.io/control-plane: ""
  annotations:
    # ðŸ”‘ DIRECT ADOPTION ANNOTATION - KhÃ´ng qua template!
    capk.cluster.x-k8s.io/existing-vm-name: "lab-vm-04"
spec:
  clusterName: kubeadm-direct-adoption-test
  version: v1.28.0
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
      kind: KubeadmConfig
      name: kubeadm-direct-adoption-test-control-plane-001
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: KubevirtMachine
    name: kubeadm-direct-adoption-test-control-plane-001

---
# KubevirtMachine - vá»›i direct adoption annotation
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachine
metadata:
  name: kubeadm-direct-adoption-test-control-plane-001
  namespace: vm-lab
  labels:
    cluster.x-k8s.io/cluster-name: kubeadm-direct-adoption-test
    cluster.x-k8s.io/control-plane: ""
  annotations:
    # ðŸ”‘ DIRECT ADOPTION ANNOTATION - Chá»‰ Ä‘á»‹nh VM cÃ³ sáºµn!
    capk.cluster.x-k8s.io/existing-vm-name: "lab-vm-04"
    # ðŸ”„ ADOPTION PHASE - Báº¯t Ä‘áº§u tá»« none Ä‘á»ƒ trigger adoption logic
    capk.cluster.x-k8s.io/adoption-phase: ""
spec:
  virtualMachineTemplate:
    metadata:
      namespace: vm-lab
      labels:
        capk.cluster.x-k8s.io/kubevirt-machine-name: kubeadm-direct-adoption-test-control-plane-001
        capk.cluster.x-k8s.io/kubevirt-machine-namespace: vm-lab
    spec:
      runStrategy: Always
      template:
        spec:
          domain:
            cpu:
              cores: 2
            memory:
              guest: "2Gi"
            devices:
              networkInterfaceMultiqueue: true
              disks:
                - disk:
                    bus: virtio
                  name: rootdisk
                - disk:
                    bus: virtio
                  name: cloudinit
              interfaces:
                - masquerade: {}
                  name: default
          networks:
            - name: default
              pod: {}
          volumes:
            # ðŸ”— Sá»­ dá»¥ng disk cÃ³ sáºµn cá»§a lab-vm-04
            - dataVolume:
                name: lab-vm-04-disk
              name: rootdisk
            - cloudInitNoCloud:
                userData: "#cloud-config\n# Bootstrap data injection point\n"
              name: cloudinit

---
# KubeadmConfig for bootstrap
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfig
metadata:
  name: kubeadm-direct-adoption-test-control-plane-001
  namespace: vm-lab
  annotations:
    # ðŸ”‘ ADOPTION AWARE - Config biáº¿t Ä‘Ã¢y lÃ  adopted VM
    capk.cluster.x-k8s.io/existing-vm-name: "lab-vm-04"
spec:
  clusterConfiguration:
    networking:
      dnsDomain: "kubeadm-direct-adoption-test.vm-lab.local"
      podSubnet: 10.243.0.0/16
      serviceSubnet: 10.95.0.0/16
    apiServer:
      extraArgs:
        cloud-provider: external
      certSANs:
        - localhost
        - 127.0.0.1
        - kubeadm-direct-adoption-test
    controllerManager:
      extraArgs:
        cloud-provider: external
  initConfiguration:
    nodeRegistration:
      criSocket: "unix:///var/run/containerd/containerd.sock"
      kubeletExtraArgs:
        cloud-provider: external
        provider-id: "kubevirt://lab-vm-04"
  joinConfiguration:
    nodeRegistration:
      criSocket: "unix:///var/run/containerd/containerd.sock"
      kubeletExtraArgs:
        cloud-provider: external
        provider-id: "kubevirt://lab-vm-04"

---
# KubeadmControlPlane - pointing to direct Machine
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: kubeadm-direct-adoption-test-control-plane
  namespace: vm-lab
  annotations:
    # ðŸ”‘ CONTROL PLANE ADOPTION ANNOTATION
    capk.cluster.x-k8s.io/existing-vm-name: "lab-vm-04"
spec:
  replicas: 1
  version: v1.28.0
  # ðŸš¨ KHÃ”NG dÃ¹ng machineTemplate - Control Plane sáº½ reference Machine trá»±c tiáº¿p
  kubeadmConfigSpec:
    clusterConfiguration:
      networking:
        dnsDomain: "kubeadm-direct-adoption-test.vm-lab.local"
        podSubnet: 10.243.0.0/16
        serviceSubnet: 10.95.0.0/16
      apiServer:
        extraArgs:
          cloud-provider: external
        certSANs:
          - localhost
          - 127.0.0.1
          - kubeadm-direct-adoption-test
      controllerManager:
        extraArgs:
          cloud-provider: external
    initConfiguration:
      nodeRegistration:
        criSocket: "unix:///var/run/containerd/containerd.sock"
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: "kubevirt://lab-vm-04"
    joinConfiguration:
      nodeRegistration:
        criSocket: "unix:///var/run/containerd/containerd.sock"
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: "kubevirt://lab-vm-04"